import time
import random
from neopixel import Neopixel

NUM_PIXELS = 16
pixels = Neopixel(17, 0, 6, "GRB")

def wheel(pos):
    if pos < 85:
        return (pos * 3, 255 - pos * 3, 0)
    elif pos < 170:
        pos -= 85
        return (255 - pos * 3, 0, pos * 3)
    else:
        pos -= 170
        return (0, pos * 3, 255 - pos * 3)

def pattern_color_wipe():
    colors = [(255, 0, 0), (0, 255, 0), (0, 0, 255)]
    for color in colors:
        for i in range(NUM_PIXELS):
            pixels.set_pixel(i, color)
            pixels.show()
            time.sleep(0.05)

def pattern_rainbow_cycle():
    for j in range(128):  # shorter cycle
        for i in range(NUM_PIXELS):
            pixels.set_pixel(i, wheel((i * 256 // NUM_PIXELS + j) & 255))
        pixels.show()
        time.sleep(0.02)

def pattern_blinking_all():
    for _ in range(6):
        for i in range(NUM_PIXELS):
            pixels.set_pixel(i, (255, 255, 255))
        pixels.show()
        time.sleep(0.3)
        for i in range(NUM_PIXELS):
            pixels.set_pixel(i, (0, 0, 0))
        pixels.show()
        time.sleep(0.3)

def pattern_chase():
    color = (0, 255, 0)
    for _ in range(NUM_PIXELS):
        for i in range(NUM_PIXELS):
            pixels.set_pixel(i, color)
            if i > 0:
                pixels.set_pixel(i - 1, (0, 0, 0))
            else:
                pixels.set_pixel(NUM_PIXELS - 1, (0, 0, 0))
            pixels.show()
            time.sleep(0.1)

def pattern_reverse_chase():
    color = (255, 100, 0)
    for _ in range(NUM_PIXELS):
        for i in reversed(range(NUM_PIXELS)):
            pixels.set_pixel(i, color)
            pixels.show()
            time.sleep(0.1)
            pixels.set_pixel(i, (0, 0, 0))

def pattern_twinkle():
    for _ in range(60):
        i = random.randint(0, NUM_PIXELS - 1)
        color = (random.randint(100, 255), random.randint(100, 255), random.randint(100, 255))
        pixels.set_pixel(i, color)
        pixels.show()
        time.sleep(0.05)
        pixels.set_pixel(i, (0, 0, 0))

def pattern_breathing():
    color = (0, 0, 255)
    for _ in range(2):
        for brightness in range(0, 256, 10):
            for i in range(NUM_PIXELS):
                pixels.set_pixel(i, tuple(c * brightness // 255 for c in color))
            pixels.show()
            time.sleep(0.02)
        for brightness in reversed(range(0, 256, 10)):
            for i in range(NUM_PIXELS):
                pixels.set_pixel(i, tuple(c * brightness // 255 for c in color))
            pixels.show()
            time.sleep(0.02)

def pattern_ping_pong():
    color = (255, 0, 255)
    for i in range(NUM_PIXELS):
        pixels.fill((0, 0, 0))
        pixels.set_pixel(i, color)
        pixels.show()
        time.sleep(0.05)
    for i in reversed(range(NUM_PIXELS)):
        pixels.fill((0, 0, 0))
        pixels.set_pixel(i, color)
        pixels.show()
        time.sleep(0.05)

# Pattern list
patterns = [
    pattern_color_wipe,
    pattern_rainbow_cycle,
    pattern_blinking_all,
    pattern_chase,
    pattern_reverse_chase,
    pattern_twinkle,
    pattern_breathing,
    pattern_ping_pong
]

# Main loop
while True:
    for pattern in patterns:
        pattern()
